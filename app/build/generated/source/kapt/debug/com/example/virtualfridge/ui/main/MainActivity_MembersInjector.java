// Generated by Dagger (https://dagger.dev).
package com.example.virtualfridge.ui.main;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<MainActivityPresenter> presenterProvider;

  public MainActivity_MembersInjector(Provider<MainActivityPresenter> presenterProvider) {
    this.presenterProvider = presenterProvider;
  }

  public static MembersInjector<MainActivity> create(
      Provider<MainActivityPresenter> presenterProvider) {
    return new MainActivity_MembersInjector(presenterProvider);}

  @Override
  public void injectMembers(MainActivity instance) {
    injectPresenter(instance, presenterProvider.get());
  }

  @InjectedFieldSignature("com.example.virtualfridge.ui.main.MainActivity.presenter")
  public static void injectPresenter(MainActivity instance, MainActivityPresenter presenter) {
    instance.presenter = presenter;
  }
}
