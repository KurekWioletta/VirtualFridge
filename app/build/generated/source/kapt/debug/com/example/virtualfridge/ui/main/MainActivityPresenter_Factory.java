// Generated by Dagger (https://dagger.dev).
package com.example.virtualfridge.ui.main;

import com.example.virtualfridge.data.api.ExampleApi;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivityPresenter_Factory implements Factory<MainActivityPresenter> {
  private final Provider<MainActivity> viewProvider;

  private final Provider<ExampleApi> exampleApiProvider;

  public MainActivityPresenter_Factory(Provider<MainActivity> viewProvider,
      Provider<ExampleApi> exampleApiProvider) {
    this.viewProvider = viewProvider;
    this.exampleApiProvider = exampleApiProvider;
  }

  @Override
  public MainActivityPresenter get() {
    return newInstance(viewProvider.get(), exampleApiProvider.get());
  }

  public static MainActivityPresenter_Factory create(Provider<MainActivity> viewProvider,
      Provider<ExampleApi> exampleApiProvider) {
    return new MainActivityPresenter_Factory(viewProvider, exampleApiProvider);
  }

  public static MainActivityPresenter newInstance(MainActivity view, ExampleApi exampleApi) {
    return new MainActivityPresenter(view, exampleApi);
  }
}
