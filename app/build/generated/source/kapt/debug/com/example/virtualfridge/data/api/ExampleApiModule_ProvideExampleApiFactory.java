// Generated by Dagger (https://dagger.dev).
package com.example.virtualfridge.data.api;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ExampleApiModule_ProvideExampleApiFactory implements Factory<ExampleApi> {
  private final Provider<Retrofit> retrofitProvider;

  public ExampleApiModule_ProvideExampleApiFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public ExampleApi get() {
    return provideExampleApi(retrofitProvider.get());
  }

  public static ExampleApiModule_ProvideExampleApiFactory create(
      Provider<Retrofit> retrofitProvider) {
    return new ExampleApiModule_ProvideExampleApiFactory(retrofitProvider);
  }

  public static ExampleApi provideExampleApi(Retrofit retrofit) {
    return Preconditions.checkNotNull(ExampleApiModule.INSTANCE.provideExampleApi(retrofit), "Cannot return null from a non-@Nullable @Provides method");
  }
}
